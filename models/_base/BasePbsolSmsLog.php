<?php

/**
 * This is the model base class for the table "pbsol_sms_log".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PbsolSmsLog".
 *
 * Columns in table "pbsol_sms_log" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $guid
 * @property string $from
 * @property string $to
 * @property string $text
 * @property string $status
 * @property boolean $is_wait
 * @property string $created
 * @property string $delivered
 *
 */
abstract class BasePbsolSmsLog extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'pbsol_sms_log';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PbsolSmsLog|PbsolSmsLogs', $n);
	}

	public static function representingColumn() {
		return 'guid';
	}

	public function rules() {
		return array(
			array('guid, from, to, status', 'length', 'max'=>255),
			array('text, is_wait, created, delivered', 'safe'),
			array('guid, from, to, text, status, is_wait, created, delivered', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, guid, from, to, text, status, is_wait, created, delivered', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'guid' => Yii::t('app', 'Guid'),
			'from' => Yii::t('app', 'From'),
			'to' => Yii::t('app', 'To'),
			'text' => Yii::t('app', 'Text'),
			'status' => Yii::t('app', 'Status'),
			'is_wait' => Yii::t('app', 'Is Wait'),
			'created' => Yii::t('app', 'Created'),
			'delivered' => Yii::t('app', 'Delivered'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('guid', $this->guid, true);
		$criteria->compare('from', $this->from, true);
		$criteria->compare('to', $this->to, true);
		$criteria->compare('text', $this->text, true);
		$criteria->compare('status', $this->status, true);
		$criteria->compare('is_wait', $this->is_wait);
		$criteria->compare('created', $this->created, true);
		$criteria->compare('delivered', $this->delivered, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}